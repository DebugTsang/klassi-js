# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details

version: 2.0
jobs:
  build:
    docker:
    - image: circleci/node:8.12

    working_directory: ~/repo

    steps:
    - checkout

    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "package.json" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-

    - run: npm install

    - save_cache:
        paths:
        - node_modules
        key: v1-dependencies-{{ checksum "package.json" }}

    - run: npm run-script dev

build_and_test:
  docker:
  # specify the version you desire here
  - image: circleci/node:8.12

  working_directory: ~/repo

  steps:
  - checkout

  # Download and cache dependencies
  - restore_cache:
      keys:
      - v1-dependencies-{{ checksum "package.json" }}
      # fallback to using the latest cache if no exact match is found
      - v1-dependencies-

  - run: npm install

  - save_cache:
      paths:
      - node_modules
      key: v1-dependencies-{{ checksum "package.json" }}

  test:
  # run tests!
  - run: npm run-script test

#workflows:
#  jobs:
#    bundle_dependencies:
#      docker:
#      - image: circleci/node:8.12
#
#      working_directory: ~/repo
#
#      steps:
#      - checkout
#
#      - restore_cache:
#          keys:
#          - v1-dependencies-{{ checksum "package.json" }}
#          # fallback to using the latest cache if no exact match is found
#          - v1-dependencies-
#
#      - run: npm install
#
#      - save_cache:
#          key: v1-dependencies-{{ checksum "package.json" }}


#    test:
#      docker:
#      - image: circleci/node:8.12
#
#      working_directory: ~/repo
#
#      steps:
#      - checkout
#
#      - restore_cache:
#          keys:
#          - v1-dependencies-{{ checksum "package.json" }}
#          # fallback to using the latest cache if no exact match is found
#          - v1-dependencies-
#
#      - run: npm install

#      - run: npm dev



#  precompile_assets:
#    docker:
#    - image: circleci/ruby:2.4-node
#    - image: circleci/postgres:9.4.12-alpine
#    working_directory: ~/circleci-demo-workflows
#    steps:
#    - restore_cache:
#        keys:
#        - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
#    - restore_cache:
#        keys:
#        - v1-bundle-{{ checksum "Gemfile.lock" }}
#    - run: bundle --path vendor/bundle
#    - run:
#        name: Precompile assets
#        command: bundle exec rake assets:precompile
#    - save_cache:
#        key: v1-assets-{{ .Environment.CIRCLE_SHA1 }}
#        paths:
#        - ~/circleci-demo-workflows/public/assets
#
#  deploy:
#    machine:
#      enabled: true
#    working_directory: ~/circleci-demo-workflows
#    environment:
#    - HEROKU_APP: still-shelf-38337
#    steps:
#    - restore_cache:
#        keys:
#        - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
#    - restore_cache:
#        keys:
#        - v1-bundle-{{ checksum "Gemfile.lock" }}
#    - restore_cache:
#        keys:
#        - v1-assets-{{ .Environment.CIRCLE_SHA1 }}
#    - checkout
#    - run:
#        name: Deploy Master to Heroku
#        command: |
#          git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP.git master
#workflows:
#  version: 2
#  build-and-deploy:
#    jobs:
#    - checkout
#    - bundle_dependencies:
#        requires:
#        - checkout
#    - rake_test:
#        requires:
#        - bundle_dependencies
#    - precompile_assets:
#        requires:
#        - bundle_dependencies
#    - deploy:
#        requires:
#        - rake_test
#        - precompile_assets


#version: 2
#jobs:
#  build:
#    docker:
#    # specify the version you desire here
#    - image: circleci/node:8.12
#
#    # Specify service dependencies here if necessary
#    # CircleCI maintains a library of pre-built images
#    # documented at https://circleci.com/docs/2.0/circleci-images/
#    # - image: circleci/mongo:3.4.4
#
#    working_directory: ~/repo
#
#    steps:
#    - checkout
#
#    # Download and cache dependencies
#    - restore_cache:
#        keys:
#        - v1-dependencies-{{ checksum "package.json" }}
#        # fallback to using the latest cache if no exact match is found
#        - v1-dependencies-
#
#    - run: npm install
#
#    - save_cache:
#        paths:
#        - node_modules
#        key: v1-dependencies-{{ checksum "package.json" }}

    # Make connection to BrowserStack
#    - run:
#        name: Set BrowserStack Local Identifier
#        command: echo 'export BROWSERSTACK_LOCAL_IDENTIFIER=develop_test_$BROWSER_NAME_run_$CIRCLE_BUILD_NUM' >> $BASH_ENV
#
#    - run:
#        name: Start BrowserStack Local
#        command: ./.circleci/scripts/browserstack-local.sh start
#        background: true
#
#    - run:
#        name: Check BrowserStack Local running
#        command: sleep 5;./.circleci/scripts/browserstack-local.sh check

#   build_and_test:
#    docker:
#    # specify the version you desire here
#    - image: circleci/node:8.12
#    working_directory: ~/repo
#
#    steps:
#    - checkout
#
#    # Download and cache dependencies
#    - restore_cache:
#        keys:
#        - v1-dependencies-{{ checksum "package.json" }}
#        # fallback to using the latest cache if no exact match is found
#        - v1-dependencies-
#
#    - run: npm install
#
#    - save_cache:
#        paths:
#        - node_modules
#        key: v1-dependencies-{{ checksum "package.json" }}
#
#    test:
#    # run tests!
#    - run: npm test
